Public Sub WorksheetCreator()
    ' version 4
    
    ' 2024-12-23 Kadi Jairus
    ' Added: Indication from "Koondtabel", not "Näidustused"
    ' Added: Hints for user to help to create xml file
    
    ' Call cnv_import and retrieve bookmarkID

    ' Call GenomeStudioImportija with the retrieved bookmarkID
    GenomeStudioImport
    
    ' Call the remaining functions as needed
    'JaluseInfo'
    PasteSpecialValues
    ButtonRemove
    SaveFileWithName
End Sub

Function cnv_import() As String
    '
    ' cnv_import Macro
    ' qSNP .cnv failist .xlsx faili tegemine
    '
    
    ' Prompt the user for input
    Dim bookmarkID As String
    bookmarkID = InputBox("Sisesta analüüsi E-kood:")
    
    ' Check if the user clicked Cancel or entered an empty string
    If bookmarkID = "" Then
        MsgBox "Sisestamine tühistatud. Makro lõpetatab."
        Exit Function
    End If

    ' Display a response message
    'MsgBox "Sa sisestasid koodi " & bookmarkID & ". OK?"'

    ' Return the bookmarkID
    cnv_import = bookmarkID
End Function


Public Sub GenomeStudioImport()
    ' Call cnv_import to get the bookmarkID
    Dim bookmarkID As String
    bookmarkID = cnv_import

    ' Prompt the user to select a folder
    ' Display a rmessage
    MsgBox "Palun näita ette kaust, kus asub uusim GenomeStudio projekt. Sobib kaust, mille nimes on kuupäev."
    Dim selectedFolder As String
    With Application.FileDialog(msoFileDialogFolderPicker)
        .title = "Vali kaust, kus on kiibiandmete kaust ('Bookmark Analyses')."
        .AllowMultiSelect = False
        If .Show = -1 Then
            selectedFolder = .SelectedItems(1)
        Else
            MsgBox "Valimine tühistatud. Makro lõpetatab."
            Exit Sub
        End If
    End With

    ' Find the "Bookmark Analyses" folder within the selected folder
    Dim folderName As String
    folderName = "Bookmark Analyses"
    Dim bookmarkAnalysesFolder As String
    bookmarkAnalysesFolder = FindFolder(selectedFolder, folderName)

    ' Check if "Bookmark Analyses" folder exists
    If bookmarkAnalysesFolder = "" Then
        MsgBox "Error: '" & folderName & "' kausta ei leitud valitud kausta sees ega alamkaustadest."
        Exit Sub
    End If

    ' Display a message with the path of the "Bookmark Analyses" folder
    'MsgBox "Leitud kaust: " & bookmarkAnalysesFolder'

    ' Continue with the rest of your code using bookmarkAnalysesFolder

    ' Find the first XML file in the folder and its subfolders
    Dim xmlFilePath As String
    xmlFilePath = FindFirstXMLFile(bookmarkAnalysesFolder)
    'MsgBox "Leitud xml fail: '" & xmlFilePath & "'."'

    ' Check if an XML file was found
    If xmlFilePath <> "" Then
        ' Parse the specified XML file and extract data based on bookmarkID
        ProcessXMLFile xmlFilePath, bookmarkID
        FooterInfo bookmarkID
    Else
        MsgBox "No XML file found in the specified folder and its subfolders."
    End If
End Sub
Sub ProcessXMLFile(filePath As String, bookmarkID As String)
    Dim xmlDoc As Object
    Set xmlDoc = CreateObject("MSXML2.DOMDocument.6.0")

    ' Load XML file
    If xmlDoc.Load(filePath) Then
        ' Extract data based on bookmarkID
        'MsgBox "Nüüd laen xml andmeid."'
        ExtractDataFromXML xmlDoc, bookmarkID
        
    Else
        MsgBox "Error loading XML file: " & filePath
    End If
End Sub

Sub ExtractDataFromXML(xmlDoc As Object, bookmarkID As String)
    ' Write "Genome Studio" in bold to Row 2, Column B
    'Cells(2, 2).value = "Genome Studio üle 50 kb"'
    'Cells(2, 2).Font.Bold = True'

    ' Check if there are any nodes with the specified bookmarkID
    Dim nodes As Object
    Set nodes = xmlDoc.SelectNodes("//bookmark[sample_id[starts-with(., '" & bookmarkID & "')]]")

    If nodes Is Nothing Then
        MsgBox "Ei leidnud infot selle bookmarkID kohta: " & bookmarkID
        Exit Sub
    End If
    

    ' First step: Values > 50000 (Title Genome Studio > 50kb)
    WriteDataByRange xmlDoc, bookmarkID, 50000000000000#, 50000, "Genome Studio > 50 kb"

    ' Insert an empty row between the two sets of data
    Rows(ActiveSheet.Cells(Rows.Count, 2).End(xlUp).Row + 1 & ":" & ActiveSheet.Cells(Rows.Count, 2).End(xlUp).Row + 1).Insert Shift:=xlDown

    ' Second step: Title Genome Studio > 20 kb and values between 20000 and 50000
    WriteDataByRange xmlDoc, bookmarkID, 50000, 20000, "Genome Studio > 20 kb"
End Sub

Sub WriteDataByRange(xmlDoc As Object, bookmarkID As String, maxValue As Double, minValue As Long, title As String)
    ' Check if there are any nodes with the specified bookmarkID
    Dim nodes As Object
    Set nodes = xmlDoc.SelectNodes("//bookmark[sample_id[starts-with(., '" & bookmarkID & "')]]")

    If nodes Is Nothing Then
        MsgBox "No data found for bookmarkID: " & bookmarkID
        Exit Sub
    End If
    
    ' Find the last row in column B
    Dim lastRow As Long
    lastRow = ActiveSheet.Cells(Rows.Count, 2).End(xlUp).Row + 2

    ' Set the title for the range before the data and in bold
    Cells(lastRow, 2).value = title
    Cells(lastRow, 2).Font.Bold = True

    ' Load gene data from Morbid.txt into an array
    Dim geneData As Variant
    geneData = LoadGeneData()

    ' Loop through the nodes and extract data based on the specified range
    Dim i As Long
    For i = 0 To nodes.Length - 1
        Dim node As Object
        Set node = nodes(i)

        ' Check if the node is not Nothing
        If Not node Is Nothing Then
            ' Extract data from the current node
            Dim sampleID As String
            Dim chrNum As String
            Dim baseStartPos As Long
            Dim baseEndPos As Long
            Dim value As String
            Dim comment As String

            ' Get the sample_id directly from the node (no need to use starts-with)
            sampleID = node.SelectSingleNode("sample_id").Text
            ' Check if the sampleID starts with the specified bookmarkID
            If Left(sampleID, Len(bookmarkID)) = bookmarkID Then
                chrNum = node.SelectSingleNode("chr_num").Text
                baseStartPos = CLng(node.SelectSingleNode("base_start_pos").Text)
                baseEndPos = CLng(node.SelectSingleNode("base_end_pos").Text)
                value = node.SelectSingleNode("value").Text
                comment = ExtractCommentValue(node.SelectSingleNode("comment").Text)

                ' Check if the data meets the specified range criteria
                ' Add +1 because last position is also part of the CNV
                If baseEndPos - baseStartPos + 1 > minValue And baseEndPos - baseStartPos + 1 < maxValue Then
                    ' Write data to Excel columns
                    Dim rowNum As Long
                    rowNum = ActiveSheet.Cells(Rows.Count, 2).End(xlUp).Row + 1

                    Cells(rowNum, 2).value = sampleID
                    Cells(rowNum, 3).value = chrNum
                    Cells(rowNum, 4).value = baseStartPos
                    Cells(rowNum, 5).value = baseEndPos
                    Cells(rowNum, 8).value = value
                    Cells(rowNum, 9).value = comment

                    ' Match gene data with coordinates
                    Dim geneNames As String
                    geneNames = ""
                    Dim j As Long
                    For j = LBound(geneData) To UBound(geneData)
                        If geneData(j, 1) = chrNum And geneData(j, 3) <= baseEndPos And geneData(j, 4) >= baseStartPos Then
                            If geneNames <> "" Then geneNames = geneNames & ", "
                            geneNames = geneNames & geneData(j, 2) ' Gene name is in the 2nd column of geneData
                        End If
                    Next j
                    Cells(rowNum, 13).value = geneNames
                End If
            End If
        End If
    Next i
End Sub

Function LoadGeneData() As Variant
    ' Load gene data from Morbid.txt into an array
    Dim geneDataArray As Variant
    Dim filePath As String
    Dim fileContent As String
    Dim fileLines() As String
    Dim i As Long

    ' Specify the file path
    filePath = "\\srvlaste\Yhendlabor\GE_Illumina kiip\Kadi\Morbid.txt"

    ' Read the contents of the file
    Open filePath For Input As #1
    fileContent = Input$(LOF(1), #1)
    Close #1

    ' Split the file content into lines
    fileLines = Split(fileContent, vbCrLf)

    ' Initialize the gene data array
    ReDim geneDataArray(1 To UBound(fileLines) + 1, 1 To 4)

    ' Loop through the lines and parse gene data
    For i = LBound(fileLines) To UBound(fileLines)
        Dim lineData() As String
        lineData = Split(fileLines(i), vbTab)
        If UBound(lineData) >= 3 Then ' Ensure lineData has enough elements
            geneDataArray(i + 1, 1) = lineData(0) ' chr
            geneDataArray(i + 1, 2) = lineData(1) ' gene_name
            geneDataArray(i + 1, 3) = lineData(2) ' start
            geneDataArray(i + 1, 4) = lineData(3) ' end
        End If
    Next i

    LoadGeneData = geneDataArray
End Function

Function ExtractCommentValue(commentText As String) As String
    ' Extract numeric value within brackets from commentText
    Dim regex As Object
    Set regex = CreateObject("VBScript.RegExp")
    regex.Global = True
    regex.Pattern = "(\d+(\.\d+)?)"

    Dim matches As Object
    Set matches = regex.Execute(commentText)

    If matches.Count > 0 Then
        ' Use the first match
        ExtractCommentValue = matches(0)
    Else
        ExtractCommentValue = ""
    End If
End Function

Function FindFirstXMLFile(folderPath As String) As String
    Dim fs As Object
    Set fs = CreateObject("Scripting.FileSystemObject")

    Dim folder As Object
    Set folder = fs.GetFolder(folderPath)

    Dim file As Object
    For Each file In folder.Files
        If UCase(fs.GetExtensionName(file.Name)) = "XML" Then
            ' Return the path of the first XML file found
            FindFirstXMLFile = file.Path
            Exit Function
        End If
    Next file

    ' Continue searching in subfolders
    Dim subFolder As Object
    For Each subFolder In folder.SubFolders
        Dim foundFile As String
        foundFile = FindFirstXMLFile(subFolder.Path)
        If foundFile <> "" Then
            FindFirstXMLFile = foundFile
            Exit Function
        End If
    Next subFolder

    ' Return an empty string if no XML file is found
    MsgBox "Ei õnnestunud leida xml-faili kaustast Bookmark Analyses. Ekspordi Genome Studiost xml fail: View -> Bookmark Viewer -> Save Selected Bookmark Analysis -> GDA* -> Data -> Bookmark Analyses."
    FindFirstXMLFile = ""
End Function

Function FindFolder(baseFolder As String, folderName As String) As String
    Dim fs As Object
    Dim folder As Object
    Dim subFolder As Object

    Set fs = CreateObject("Scripting.FileSystemObject")
    Set folder = fs.GetFolder(baseFolder)

    ' Search for the specified folder within the base folder and its subfolders
    FindFolder = RecursiveSearch(folder, folderName)
End Function

Function RecursiveSearch(currentFolder As Object, folderName As String) As String
    Dim subFolder As Object
    Dim foundFolder As String

    ' Check if the current folder matches the desired folder name
    If UCase(currentFolder.Name) = UCase(folderName) Then
        RecursiveSearch = currentFolder.Path
        Exit Function
    End If

    ' Continue searching in subfolders
    For Each subFolder In currentFolder.SubFolders
        foundFolder = RecursiveSearch(subFolder, folderName)
        If foundFolder <> "" Then
            RecursiveSearch = foundFolder
            Exit Function
        End If
    Next subFolder

    ' Return an empty string if the folder is not found
    RecursiveSearch = ""
End Function
Function GetNewestFile(folderPath As String) As String
    Dim newestFile As String
    Dim newestDate As Date
    newestDate = DateSerial(1900, 1, 1)

    Dim fileName As String
    Dim fileDate As Date
    Dim filePath As String

    fileName = Dir(folderPath & "*.xlsm")
    Do While fileName <> ""
        filePath = folderPath & fileName
        fileDate = FileDateTime(filePath)

        If fileDate > newestDate Then
            newestDate = fileDate
            newestFile = filePath
        End If

        fileName = Dir
    Loop

    GetNewestFile = newestFile
End Function

Public Sub FooterInfo(bookmarkID As String)
'MsgBox "bookmarkID is " & bookmarkID'

'" & bookmarkID & "'
Sheets("Tööleht").Select

Range("B2").Select
'Adds bookmarkID to B2 to be used in formula
Range("B2").value = bookmarkID

' Imports patient data, adds logged in users name, adds current date
' Find lowest cell for title
Range("B200").Select
Selection.End(xlUp).Offset(1, 0).Select
' Add 2 empty rows
Selection.Offset(2, 0).Select

' Add 8 rows to avoid functions on the worksheet (cut out longer lines)
Rows(Selection.Row + 1 & ":" & Selection.Row + 8).Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove

' Remember link to patient data and region
Dim strKndtbLink As String
'Testpath'
'strKndtbLink = "'C:\Users\Loom\Desktop\Testimiseks_2023_GDA\[GDA_38_koond.xlsx]Leht1'"'
strKndtbLink = "'\\srvlaste\Yhendlabor\GE_Illumina kiip\[GDA_38_koond.xlsx]Leht1'"
' Add formulas to column B
    ActiveCell.Formula = _
        "=IFERROR(""GDA""&INDEX(" & strKndtbLink & "!R2C1:R5000C21,MATCH(R2C2," & strKndtbLink & "!R2C3:R5000C3,0),2)&""/""&R2C2,""viga"")"
    Selection.Offset(1, 0).Select
    ActiveCell.Formula = _
        "=INDEX(" & strKndtbLink & "!R2C1:R5000C21," & _
        "MATCH(R2C2," & strKndtbLink & "!R2C3:R5000C3,0),4)&"" - ""&IFERROR(DATEDIF(DATE(IF(VALUE(LEFT(INDEX(" & strKndtbLink & "!R2C1:R5000C21" & _
        ",MATCH(R2C2," & strKndtbLink & "!R2C3:R5000C3,0),5),1))<5,1900,2000)" & _
        "+VALUE(MID(INDEX(" & strKndtbLink & "!R2C1:R5000C21,MATCH(R2C2," & strKndtbLink & "!R2C3:R5000C3,0),5),2,2))" & _
        ",VALUE(MID(INDEX(" & strKndtbLink & "!R2C1:R5000C21,MATCH(R2C2," & strKndtbLink & "!R2C3:R5000C3,0),5),4,2))" & _
        ",VALUE(MID(INDEX(" & strKndtbLink & "!R2C1:R5000C21,MATCH(R2C2," & strKndtbLink & "!R2C3:R5000C3,0),5),6,2)))" & _
        ",TODAY(),""Y""),""?"")&""a "" & IFERROR(DATEDIF(DATE(IF(VALUE(LEFT(INDEX(" & strKndtbLink & "!R2C1:R5000C21" & _
        ",MATCH(R2C2," & strKndtbLink & "!R2C3:R5000C3,0),5),1))<5,1900,2000)+VALUE(MID(INDEX(" & strKndtbLink & "!R2C1:R5000C21" & _
        ",MATCH(R2C2," & strKndtbLink & "!R2C3:R5000C3,0),5),2,2)),VALUE(MID(INDEX(" & strKndtbLink & "!R2C1:R5000C21" & _
        ",MATCH(R2C2," & strKndtbLink & "!R2C3:R5000C3,0),5),4,2)),VALUE(MID(INDEX(" & strKndtbLink & "!R2C1:R5000C21" & _
        ",MATCH(R2C2," & strKndtbLink & "!R2C3:R5000C3,0),5),6,2))),TODAY(),""YM""),""?"")&""k - ""&"" ik ""&INDEX(" & strKndtbLink & "!R2C1:R5000C21," & _
        "MATCH(R2C2," & strKndtbLink & "!R2C3:R5000C3,0),5)"
    Selection.Offset(1, 0).Select
    
    
    
    ' Now, find the newest file in the specified folder for "strNaidust"
    Dim strNaidustFolder As String
    'Testpath'
    'strNaidustFolder = "C:\Users\Loom\Desktop\Testimiseks_2023_GDA\näidustused\"'
    strNaidustFolder = "\\srvlaste\Yhendlabor\GE_Illumina kiip\GDA_kiip_näidustused\"

    Dim newestFile As String
    newestFile = GetNewestFile(strNaidustFolder)

    If newestFile <> "" Then
        ' Modify the formula to use the newest file
        ActiveCell.Formula = _
            "=IFERROR(""Proov võetud: "" & TEXT(INDEX('" & newestFile & "'!R1C1:R34C10, MATCH(R2C2, '" & newestFile & "'!R1C5:R34C5, 0), 7), ""dd.mm.yyyy""), ""Proov võetud: ?"")"

    Else
        MsgBox "No files found in folder: " & strNaidustFolder, vbExclamation
    End If
    Selection.Offset(1, 0).Select
    
    ActiveCell.Formula = _
        "=""dr. "" &INDEX(" & strKndtbLink & "!R2C1:R5000C21," & _
        "MATCH(R2C2," & strKndtbLink & "!R2C3:R5000C3,0),6) & "" - "" &INDEX(" & strKndtbLink & "!R2C1:R5000C21," & _
        "MATCH(R2C2," & strKndtbLink & "!R2C3:R5000C3,0),21)"
    Selection.Offset(1, 0).Select
    
    ActiveCell.Formula = _
        "=""Sooline profiil: ""&INDEX(" & strKndtbLink & "!R2C1:R5000C21," & _
        "MATCH(R2C2," & strKndtbLink & "!R2C3:R5000C3,0),8)"
If ActiveCell.value = "Sooline profiil: Male" Then
ActiveCell.value = Replace("Sooline profiil: Male", "Male", "Mees")
ElseIf ActiveCell.value = "Sooline profiil: Female" Then
ActiveCell.value = Replace("Sooline profiil: Female", "Female", "Naine")
Else: ActiveCell.value = "?"
End If
    
    Selection.Offset(2, 0).Select
    Selection.value = "TULEMUS:"
    Selection.Font.Bold = True
    Selection.Offset(1, 0).Select
    Selection.value = Application.UserName
    Selection.Offset(1, 0).Select
    ActiveCell.Formula = "=TODAY()"
    Selection.HorizontalAlignment = xlLeft

End Sub

Public Sub SaveFileWithName()

Dim dlgSaveFolder As FileDialog
Dim sFolderPathForSave As String

Dim strKndtbLink As String
'strKndtbLink = "'C:\Users\Loom\Desktop\Testimiseks_2023_GDA\[GDA_38_koond.xlsx]Leht1'"'
strKndtbLink = "'\\srvlaste\Yhendlabor\GE_Illumina kiip\[GDA_38_koond.xlsx]Leht1'"

Range("B200").Select
ActiveCell.Formula = _
    "=IFERROR(INDEX(" & strKndtbLink & "!R2C1:R5000C21,MATCH(R2C2," & strKndtbLink & "!R2C3:R5000C3,0),4),""viga"")"

Dim strPatsiendiNimi As String
strPatsiendiNimi = Range("B200").value

Dim Failinimi As String
' Salvestab proovi numbri ja nimega, eemaldab läbiva suurtähe
Failinimi = Range("B2").value & " " & StrConv(strPatsiendiNimi, vbProperCase)
Range("B200").Delete
Range("B2").Select
'Lõpuks lisab algusesse pealkirja tagasi'
'Range("B2").value = "Genome Studio > 50 kb CNV" ''
'Selection.Font.Bold = True ''

'First row not needed'
Rows("2:2").Delete '

MsgBox "Vali kaust kuhu soovid töölehe salvestada"
'''
'Open a Folder picker dialog box.
Set dlgSaveFolder = Application.FileDialog(msoFileDialogFolderPicker)
With dlgSaveFolder
.title = "Vali kaust kuhu soovid töölehe salvestada"
.AllowMultiSelect = False
.InitialFileName = ThisWorkbook.Path & "\"
If .Show <> -1 Then GoTo CancelFolderSelection
sFolderPathForSave = .SelectedItems(1)
End With
Set dlgSaveFolder = Nothing
'''
'File saving code goes here.
Application.DisplayAlerts = False
ActiveWorkbook.SaveAs fileName:= _
sFolderPathForSave & "\" & Failinimi & ".xlsx", FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False
Application.DisplayAlerts = False
CancelFolderSelection:
MsgBox "Fail nimega '" & Failinimi & "' on salvestatud kausta '" & sFolderPathForSave & "'"
End Sub


Public Sub PasteSpecialValues()
    Columns("A:L").Select
    Selection.Copy
    Selection.PasteSpecial Paste:=xlPasteValues
    Range("B2").Select
End Sub

Public Sub ButtonRemove()
' Delete macro button
    ActiveSheet.Shapes.Range(Array("Button 1")).Select
    Selection.Delete
End Sub
